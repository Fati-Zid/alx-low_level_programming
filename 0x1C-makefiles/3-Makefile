# Makefile for 'school' executable

# Compiler
CC = gcc

# Source files
SRC = main.c file1.c file2.c

# Object files
OBJ = $(SRC:.c=.o)

# Executable name
NAME = school

# Program to delete files
RM = rm -f

# Compiler flags
CFLAGS = -Wall -Wextra -O2

# Rule to build the executable
all: $(NAME)

$(NAME): $(OBJ)
	$(CC) $(OBJ) -o $(NAME)

# Rule to clean Emacs, Vim temporary files, executable, and object files
clean:
	$(RM) *~ *# .#* $(NAME)

# Rule to delete object files
oclean:
	$(RM) $(OBJ)

# Rule to clean all Emacs, Vim temporary files, executable, and object files
fclean: clean oclean
	$(RM) $(NAME)

# Rule to force recompilation of all source files
re: fclean all

# Rule to build object files from source files
%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

# Phony targets to ensure these rules are always executed
.PHONY: all clean oclean fclean re

